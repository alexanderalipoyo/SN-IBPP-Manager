{
  "stats": {
    "suites": 17,
    "tests": 218,
    "passes": 215,
    "pending": 0,
    "failures": 3,
    "start": "2022-11-10T06:28:09.998Z",
    "end": "2022-11-10T07:10:30.005Z",
    "duration": 2246301,
    "testsRegistered": 218,
    "passPercent": 98.62385321100918,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7ea176d1-8932-49dc-88e1-589376e0053c",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\general.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\general.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "90e4e246-a056-4552-8491-d99e03c627fc",
          "title": "General - Manager",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Application Menu : Default items should visible",
              "fullTitle": "General - Manager Application Menu : Default items should visible",
              "timedOut": null,
              "duration": 32138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "95539ddd-7894-4999-b4d1-4cb9998cabe4",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Check texts/labels if visible",
              "fullTitle": "General - Manager Application Menu : Check texts/labels if visible",
              "timedOut": null,
              "duration": 65,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "56300643-6d71-4f80-b336-6b3be07695af",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Validate favorite application",
              "fullTitle": "General - Manager Application Menu : Validate favorite application",
              "timedOut": null,
              "duration": 15859,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a0029805-0196-4924-8f90-03b696834c2d",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Default items and fields should visible",
              "fullTitle": "General - Manager My Profile : Default items and fields should visible",
              "timedOut": null,
              "duration": 1787,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "66ee6132-40f9-464b-8bd5-b16ed220c9b9",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Check texts/labels if visible",
              "fullTitle": "General - Manager My Profile : Check texts/labels if visible",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1a893cef-249b-488d-8a8e-f189e08cc51a",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Update Basic Information",
              "fullTitle": "General - Manager My Profile : Update Basic Information",
              "timedOut": null,
              "duration": 7536,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0dcab563-b85b-4bea-b04e-b233685c31a1",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Display warning modal to disable weekly training and monthly newsletter emails",
              "fullTitle": "General - Manager My Profile : Display warning modal to disable weekly training and monthly newsletter emails",
              "timedOut": null,
              "duration": 2468,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "46d7e753-79bf-4034-910d-d7be39689999",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "fullTitle": "General - Manager My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "timedOut": null,
              "duration": 1104,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "30c3f4f9-8340-49d8-8eb7-4c2d5061cbaa",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Password and verify password fields does not match",
              "fullTitle": "General - Manager My Profile (NEGATIVE) : Password and verify password fields does not match",
              "timedOut": null,
              "duration": 2316,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0bb65d10-ff50-4f76-a72a-656862429973",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "fullTitle": "General - Manager My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "timedOut": null,
              "duration": 2781,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0f3da264-129e-455c-bf00-7e463e3b26ec",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "fullTitle": "General - Manager My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "timedOut": null,
              "duration": 492,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1ec5899a-55d4-4704-9370-38686bbdae32",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "fullTitle": "General - Manager My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "timedOut": null,
              "duration": 489,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e0ddfc51-9f0c-4767-b00f-16ed5c749c1d",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Able to change country code on phone number",
              "fullTitle": "General - Manager My Profile (OOTB) : Able to change country code on phone number",
              "timedOut": null,
              "duration": 2914,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "915e4ae4-7d16-427c-9b0d-1bfed4e3ba62",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Enter a screen name with spaces only",
              "fullTitle": "General - Manager My Profile (OOTB) : Enter a screen name with spaces only",
              "timedOut": null,
              "duration": 2445,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d8bb8328-51f0-4450-b433-8996c8f14dcc",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Disable update button when mandatory fields are empty",
              "fullTitle": "General - Manager My Profile : Disable update button when mandatory fields are empty",
              "timedOut": null,
              "duration": 520,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e4cc5a1b-1600-45f4-8577-5d378abb25a4",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - risk",
              "fullTitle": "General - Manager My Profile : Validate Password Strength - risk",
              "timedOut": null,
              "duration": 489,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6009209f-4709-4e66-9df8-dc04a79de6fa",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - weak",
              "fullTitle": "General - Manager My Profile : Validate Password Strength - weak",
              "timedOut": null,
              "duration": 475,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "87656b8b-f858-4ec4-beb5-a5c4510f4878",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - fair",
              "fullTitle": "General - Manager My Profile : Validate Password Strength - fair",
              "timedOut": null,
              "duration": 587,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f8238e9e-b0a4-45ec-ba04-beb10395724a",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - good",
              "fullTitle": "General - Manager My Profile : Validate Password Strength - good",
              "timedOut": null,
              "duration": 645,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "31e185e7-a356-4bf5-bbcf-90603d3a53eb",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - strong",
              "fullTitle": "General - Manager My Profile : Validate Password Strength - strong",
              "timedOut": null,
              "duration": 864,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "057a7710-73f6-4da4-8684-aa8e3b142750",
              "parentUUID": "90e4e246-a056-4552-8491-d99e03c627fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95539ddd-7894-4999-b4d1-4cb9998cabe4",
            "56300643-6d71-4f80-b336-6b3be07695af",
            "a0029805-0196-4924-8f90-03b696834c2d",
            "66ee6132-40f9-464b-8bd5-b16ed220c9b9",
            "1a893cef-249b-488d-8a8e-f189e08cc51a",
            "0dcab563-b85b-4bea-b04e-b233685c31a1",
            "46d7e753-79bf-4034-910d-d7be39689999",
            "30c3f4f9-8340-49d8-8eb7-4c2d5061cbaa",
            "0bb65d10-ff50-4f76-a72a-656862429973",
            "0f3da264-129e-455c-bf00-7e463e3b26ec",
            "1ec5899a-55d4-4704-9370-38686bbdae32",
            "e0ddfc51-9f0c-4767-b00f-16ed5c749c1d",
            "915e4ae4-7d16-427c-9b0d-1bfed4e3ba62",
            "d8bb8328-51f0-4450-b433-8996c8f14dcc",
            "e4cc5a1b-1600-45f4-8577-5d378abb25a4",
            "6009209f-4709-4e66-9df8-dc04a79de6fa",
            "87656b8b-f858-4ec4-beb5-a5c4510f4878",
            "f8238e9e-b0a4-45ec-ba04-beb10395724a",
            "31e185e7-a356-4bf5-bbcf-90603d3a53eb",
            "057a7710-73f6-4da4-8684-aa8e3b142750"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 76132,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e2ae9569-db4e-4f4b-af6e-c5977c2c7d64",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\newsfeed.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\newsfeed.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e3a37557-8672-4b9f-ac38-2e47bfb97ab5",
          "title": "Newsfeed - Manager",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Newsfeed : Default items should visible",
              "fullTitle": "Newsfeed - Manager Newsfeed : Default items should visible",
              "timedOut": null,
              "duration": 28861,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e81ec2ba-5e86-4806-89be-bdb7abf80667",
              "parentUUID": "e3a37557-8672-4b9f-ac38-2e47bfb97ab5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Check texts/labels if visible",
              "fullTitle": "Newsfeed - Manager Newsfeed : Check texts/labels if visible",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b4cefc10-7066-4b38-bcbe-3ed2400484e5",
              "parentUUID": "e3a37557-8672-4b9f-ac38-2e47bfb97ab5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Notifications",
              "fullTitle": "Newsfeed - Manager Newsfeed : Validate Notifications",
              "timedOut": null,
              "duration": 3670,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "62ca456a-1854-4438-9184-713720e15714",
              "parentUUID": "e3a37557-8672-4b9f-ac38-2e47bfb97ab5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Advanced Filters",
              "fullTitle": "Newsfeed - Manager Newsfeed : Validate Advanced Filters",
              "timedOut": null,
              "duration": 11788,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "de7ad810-4bcf-4308-b6f5-bf3bc13fa2e6",
              "parentUUID": "e3a37557-8672-4b9f-ac38-2e47bfb97ab5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Sortings",
              "fullTitle": "Newsfeed - Manager Newsfeed : Validate Sortings",
              "timedOut": null,
              "duration": 6643,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1cd3cf8d-0ace-44fa-8607-95311dee1f22",
              "parentUUID": "e3a37557-8672-4b9f-ac38-2e47bfb97ab5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Search by Hasthag",
              "fullTitle": "Newsfeed - Manager Newsfeed : Validate Search by Hasthag",
              "timedOut": null,
              "duration": 1379,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9f0f9876-d4dc-41ad-b7de-d74e590e1346",
              "parentUUID": "e3a37557-8672-4b9f-ac38-2e47bfb97ab5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Search by Users",
              "fullTitle": "Newsfeed - Manager Newsfeed : Validate Search by Users",
              "timedOut": null,
              "duration": 907,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "68d89d5e-a7d2-4f48-b09b-63ae397c89d0",
              "parentUUID": "e3a37557-8672-4b9f-ac38-2e47bfb97ab5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (NEGATIVE) : Validate MA/M/E (non-internal bpp) does not have authorized to publish a post",
              "fullTitle": "Newsfeed - Manager Newsfeed (NEGATIVE) : Validate MA/M/E (non-internal bpp) does not have authorized to publish a post",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "94e85781-996c-42cf-8be6-7d624f51498b",
              "parentUUID": "e3a37557-8672-4b9f-ac38-2e47bfb97ab5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (EDGE) : Validate Press \"ENTER\" key on keyboard on Newsfeed Screen",
              "fullTitle": "Newsfeed - Manager Newsfeed (EDGE) : Validate Press \"ENTER\" key on keyboard on Newsfeed Screen",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7bb41134-9c26-4279-a3ae-b88f67fa26c3",
              "parentUUID": "e3a37557-8672-4b9f-ac38-2e47bfb97ab5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (NEGATIVE) : Validate search on non existing user",
              "fullTitle": "Newsfeed - Manager Newsfeed (NEGATIVE) : Validate search on non existing user",
              "timedOut": null,
              "duration": 2302,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7511d04c-ae32-48c7-8834-a66f072da2e2",
              "parentUUID": "e3a37557-8672-4b9f-ac38-2e47bfb97ab5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (NEGATIVE) : Validate search on non existing hashtags",
              "fullTitle": "Newsfeed - Manager Newsfeed (NEGATIVE) : Validate search on non existing hashtags",
              "timedOut": null,
              "duration": 2121,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "32863fec-3e7a-4ee4-a576-076c6e0dddcd",
              "parentUUID": "e3a37557-8672-4b9f-ac38-2e47bfb97ab5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e81ec2ba-5e86-4806-89be-bdb7abf80667",
            "b4cefc10-7066-4b38-bcbe-3ed2400484e5",
            "62ca456a-1854-4438-9184-713720e15714",
            "de7ad810-4bcf-4308-b6f5-bf3bc13fa2e6",
            "1cd3cf8d-0ace-44fa-8607-95311dee1f22",
            "9f0f9876-d4dc-41ad-b7de-d74e590e1346",
            "68d89d5e-a7d2-4f48-b09b-63ae397c89d0",
            "94e85781-996c-42cf-8be6-7d624f51498b",
            "7bb41134-9c26-4279-a3ae-b88f67fa26c3",
            "7511d04c-ae32-48c7-8834-a66f072da2e2",
            "32863fec-3e7a-4ee4-a576-076c6e0dddcd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 58142,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fe836d0d-0245-41ac-94f0-2790b1824c87",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\reg-codes.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\reg-codes.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "595bb8a3-c292-4dbb-a943-154638afb404",
          "title": "Add New Managers - Registration codes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Default items should visible",
              "fullTitle": "Add New Managers - Registration codes Default items should visible",
              "timedOut": null,
              "duration": 3313,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "084c1038-114a-4baa-b8c2-09469184bfb1",
              "parentUUID": "595bb8a3-c292-4dbb-a943-154638afb404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate successful new user account creation",
              "fullTitle": "Add New Managers - Registration codes Validate successful new user account creation",
              "timedOut": null,
              "duration": 8079,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "303dad3f-f65a-4218-b11e-d607b3573723",
              "parentUUID": "595bb8a3-c292-4dbb-a943-154638afb404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate existing user",
              "fullTitle": "Add New Managers - Registration codes Validate existing user",
              "timedOut": null,
              "duration": 8387,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f069a3b0-3cb0-47b8-8624-fe17f3eaecf3",
              "parentUUID": "595bb8a3-c292-4dbb-a943-154638afb404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate cancel adding new user",
              "fullTitle": "Add New Managers - Registration codes Validate cancel adding new user",
              "timedOut": null,
              "duration": 1522,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "293b0c2f-7965-49e5-a57e-da79ea89c000",
              "parentUUID": "595bb8a3-c292-4dbb-a943-154638afb404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check field validations",
              "fullTitle": "Add New Managers - Registration codes Check field validations",
              "timedOut": null,
              "duration": 2665,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "66922496-2565-40da-80c5-cf9bc596b901",
              "parentUUID": "595bb8a3-c292-4dbb-a943-154638afb404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate matching email and confirm email fields",
              "fullTitle": "Add New Managers - Registration codes Validate matching email and confirm email fields",
              "timedOut": null,
              "duration": 6444,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "209dbfcc-2d9b-44eb-97ce-885f3dca377c",
              "parentUUID": "595bb8a3-c292-4dbb-a943-154638afb404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate matching password and verify password fields",
              "fullTitle": "Add New Managers - Registration codes Create account : Validate matching password and verify password fields",
              "timedOut": null,
              "duration": 6514,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6dff25dd-9eb7-4151-ad27-5fd4cd5b989a",
              "parentUUID": "595bb8a3-c292-4dbb-a943-154638afb404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - risk",
              "fullTitle": "Add New Managers - Registration codes Create account : Validate Password Strength - risk",
              "timedOut": null,
              "duration": 1707,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d3b73b79-ea5c-469b-a0c3-08760a7e3e04",
              "parentUUID": "595bb8a3-c292-4dbb-a943-154638afb404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - weak",
              "fullTitle": "Add New Managers - Registration codes Create account : Validate Password Strength - weak",
              "timedOut": null,
              "duration": 1273,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "122f4f10-0f34-4895-8d7f-ca919d9ee2ba",
              "parentUUID": "595bb8a3-c292-4dbb-a943-154638afb404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - fair",
              "fullTitle": "Add New Managers - Registration codes Create account : Validate Password Strength - fair",
              "timedOut": null,
              "duration": 1369,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0c5fc246-950a-4a78-bc81-4b001cb21d44",
              "parentUUID": "595bb8a3-c292-4dbb-a943-154638afb404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - good",
              "fullTitle": "Add New Managers - Registration codes Create account : Validate Password Strength - good",
              "timedOut": null,
              "duration": 1349,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a62c11ca-81a6-41b5-8c43-e87bb00f25d5",
              "parentUUID": "595bb8a3-c292-4dbb-a943-154638afb404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - strong",
              "fullTitle": "Add New Managers - Registration codes Create account : Validate Password Strength - strong",
              "timedOut": null,
              "duration": 1906,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "06769826-4b0a-4b56-b5d7-8ae085c34733",
              "parentUUID": "595bb8a3-c292-4dbb-a943-154638afb404",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "084c1038-114a-4baa-b8c2-09469184bfb1",
            "303dad3f-f65a-4218-b11e-d607b3573723",
            "f069a3b0-3cb0-47b8-8624-fe17f3eaecf3",
            "293b0c2f-7965-49e5-a57e-da79ea89c000",
            "66922496-2565-40da-80c5-cf9bc596b901",
            "209dbfcc-2d9b-44eb-97ce-885f3dca377c",
            "6dff25dd-9eb7-4151-ad27-5fd4cd5b989a",
            "d3b73b79-ea5c-469b-a0c3-08760a7e3e04",
            "122f4f10-0f34-4895-8d7f-ca919d9ee2ba",
            "0c5fc246-950a-4a78-bc81-4b001cb21d44",
            "a62c11ca-81a6-41b5-8c43-e87bb00f25d5",
            "06769826-4b0a-4b56-b5d7-8ae085c34733"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 44528,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4585124e-0b42-4afb-8b75-05ad6aa12461",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\my-company\\dark_web.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\my-company\\dark_web.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "478934a2-da5f-45df-b0df-3b4641890320",
          "title": "Dark Web Monitoring",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company DWM : Default items should visible",
              "fullTitle": "Dark Web Monitoring My Company DWM : Default items should visible",
              "timedOut": null,
              "duration": 33451,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "af0543b1-a26e-4b1f-93d8-e2c21df96625",
              "parentUUID": "478934a2-da5f-45df-b0df-3b4641890320",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM : Check texts/labels if visible",
              "fullTitle": "Dark Web Monitoring My Company DWM : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2278,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b1815f97-0262-40ff-bd29-b7ee2339d96c",
              "parentUUID": "478934a2-da5f-45df-b0df-3b4641890320",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM : Generate Reports",
              "fullTitle": "Dark Web Monitoring My Company DWM : Generate Reports",
              "timedOut": null,
              "duration": 1923,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "537efcfa-8f8b-4dc7-a15c-445796b7d725",
              "parentUUID": "478934a2-da5f-45df-b0df-3b4641890320",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (OOTB) : Validate API results when generating reports",
              "fullTitle": "Dark Web Monitoring My Company DWM (OOTB) : Validate API results when generating reports",
              "timedOut": null,
              "duration": 5482,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a575d3e0-de1b-4e5c-af30-142e93060fd0",
              "parentUUID": "478934a2-da5f-45df-b0df-3b4641890320",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (OOTB) : Validate POST method each click event on table results",
              "fullTitle": "Dark Web Monitoring My Company DWM (OOTB) : Validate POST method each click event on table results",
              "timedOut": null,
              "duration": 4292,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d8da9ef0-c1f8-4edd-a390-783ba0bdfea4",
              "parentUUID": "478934a2-da5f-45df-b0df-3b4641890320",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (NEGATIVE) : Validate unregistered domain on table results",
              "fullTitle": "Dark Web Monitoring My Company DWM (NEGATIVE) : Validate unregistered domain on table results",
              "timedOut": null,
              "duration": 3075,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ff633565-6c68-4204-99f3-753df375b8fb",
              "parentUUID": "478934a2-da5f-45df-b0df-3b4641890320",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (NEGATIVE) : Validate unlisted site breached on table results",
              "fullTitle": "Dark Web Monitoring My Company DWM (NEGATIVE) : Validate unlisted site breached on table results",
              "timedOut": null,
              "duration": 919,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a4d31048-168c-4f62-80c4-7b6e7cad81a6",
              "parentUUID": "478934a2-da5f-45df-b0df-3b4641890320",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (NEGATIVE) : Invalidate searching breach date",
              "fullTitle": "Dark Web Monitoring My Company DWM (NEGATIVE) : Invalidate searching breach date",
              "timedOut": null,
              "duration": 707,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4c16fe69-6045-458f-bbe6-f603ea3231dc",
              "parentUUID": "478934a2-da5f-45df-b0df-3b4641890320",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (EDGE) : Validate password redaction options",
              "fullTitle": "Dark Web Monitoring My Company DWM (EDGE) : Validate password redaction options",
              "timedOut": null,
              "duration": 495,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fbc896df-404f-482f-8ce0-b2aa902e6e9f",
              "parentUUID": "478934a2-da5f-45df-b0df-3b4641890320",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (EDGE) : Validate non redaction password",
              "fullTitle": "Dark Web Monitoring My Company DWM (EDGE) : Validate non redaction password",
              "timedOut": null,
              "duration": 343,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "21bf5a2c-49e8-4efb-8480-929c59d6f0e8",
              "parentUUID": "478934a2-da5f-45df-b0df-3b4641890320",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM : Validate column sorting",
              "fullTitle": "Dark Web Monitoring My Company DWM : Validate column sorting",
              "timedOut": null,
              "duration": 1651,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "72cd6957-e9c8-4f79-a499-0e0a88a4d9fc",
              "parentUUID": "478934a2-da5f-45df-b0df-3b4641890320",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af0543b1-a26e-4b1f-93d8-e2c21df96625",
            "b1815f97-0262-40ff-bd29-b7ee2339d96c",
            "537efcfa-8f8b-4dc7-a15c-445796b7d725",
            "a575d3e0-de1b-4e5c-af30-142e93060fd0",
            "d8da9ef0-c1f8-4edd-a390-783ba0bdfea4",
            "ff633565-6c68-4204-99f3-753df375b8fb",
            "a4d31048-168c-4f62-80c4-7b6e7cad81a6",
            "4c16fe69-6045-458f-bbe6-f603ea3231dc",
            "fbc896df-404f-482f-8ce0-b2aa902e6e9f",
            "21bf5a2c-49e8-4efb-8480-929c59d6f0e8",
            "72cd6957-e9c8-4f79-a499-0e0a88a4d9fc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 54616,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "da129417-847f-4a4d-888a-c4209855a685",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\my-company\\documents.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\my-company\\documents.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
          "title": "Documents",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company Documents: Default items should visible",
              "fullTitle": "Documents My Company Documents: Default items should visible",
              "timedOut": null,
              "duration": 33656,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a7d2afe4-b074-4f14-9abb-3a58f56220a3",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Check texts/labels if visible",
              "fullTitle": "Documents My Company Documents : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2117,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "84c8cea9-e53a-4755-99e9-05ee60db54e8",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Adding Service Provider Documents",
              "fullTitle": "Documents My Company Documents : Adding Service Provider Documents",
              "timedOut": null,
              "duration": 21295,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d9dccbb9-9342-45a8-800b-e21fa222be5a",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Validate created Service Provider Documents",
              "fullTitle": "Documents My Company Documents : Validate created Service Provider Documents",
              "timedOut": null,
              "duration": 100260,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 100000ms: expected '<td.MuiTableCell-root-520.MuiTableCell-body-522.ComponentTypes__TableCellContent-sc-nb4o94-11.fstFwt.MuiTableCell-alignLeft-527>' to contain text '2022-11-10', but the text was '11/10/2022'",
                "estack": "AssertionError: Timed out retrying after 100000ms: expected '<td.MuiTableCell-root-520.MuiTableCell-body-522.ComponentTypes__TableCellContent-sc-nb4o94-11.fstFwt.MuiTableCell-alignLeft-527>' to contain text '2022-11-10', but the text was '11/10/2022'\n    at companyDocuments.documentTypes (cypress/page-objects/internal-bpp/partner-admin/my-company/documents.ts:364:41)\n    at Context.eval (cypress/e2e/internal-bpp/manager/my-company/documents/company_documents.ts:103:19)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": "- '11/10/2022'\n+ '2022-11-10'\n"
              },
              "uuid": "609f0501-df99-4eab-98b7-93de3d975c9c",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Edit existing Service Provider Documents",
              "fullTitle": "Documents My Company Documents : Edit existing Service Provider Documents",
              "timedOut": null,
              "duration": 24201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "974c9a92-6893-462d-94d4-5555f67f507b",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Delete existing Service Provider Documents",
              "fullTitle": "Documents My Company Documents : Delete existing Service Provider Documents",
              "timedOut": null,
              "duration": 3749,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d3c4d015-a92f-4917-8f23-ceea26a4abc6",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Adding Disaster Recovery Plans",
              "fullTitle": "Documents My Company Documents : Adding Disaster Recovery Plans",
              "timedOut": null,
              "duration": 9605,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5575cb6f-4e08-47e3-b5b8-7bee4b09e7f4",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Validate created Disaster Recovery Plans",
              "fullTitle": "Documents My Company Documents : Validate created Disaster Recovery Plans",
              "timedOut": null,
              "duration": 2101,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f9dbc6c3-58af-4e4a-9919-b541051174e9",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Edit existing Disaster Recovery Plans",
              "fullTitle": "Documents My Company Documents : Edit existing Disaster Recovery Plans",
              "timedOut": null,
              "duration": 9869,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "824ad542-06ce-41e4-aaf3-4e2b43f553cf",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Delete existing Disaster Recovery Plans",
              "fullTitle": "Documents My Company Documents : Delete existing Disaster Recovery Plans",
              "timedOut": null,
              "duration": 3216,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fcd61674-2f0e-4ba4-8990-11d24ef22593",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Adding Other Documents",
              "fullTitle": "Documents My Company Documents : Adding Other Documents",
              "timedOut": null,
              "duration": 9836,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d619fcbc-6d84-4b35-8453-5e1a891d397b",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Validate created Other Documents",
              "fullTitle": "Documents My Company Documents : Validate created Other Documents",
              "timedOut": null,
              "duration": 100282,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 100000ms: Expected to find element: `//tbody/tr[1]/td[5]/a[1]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 100000ms: Expected to find element: `//tbody/tr[1]/td[5]/a[1]`, but never found it.\n    at companyDocuments.documentTypes (cypress/page-objects/internal-bpp/partner-admin/my-company/documents.ts:200:55)\n    at Context.eval (cypress/e2e/internal-bpp/manager/my-company/documents/company_documents.ts:241:19)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "7e069b10-1f19-449e-a721-2f79c3ac63c2",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Edit existing Other Documents",
              "fullTitle": "Documents My Company Documents : Edit existing Other Documents",
              "timedOut": null,
              "duration": 10064,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "863cffea-2a86-45c1-8057-0760b6b01b87",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Delete Other Documents",
              "fullTitle": "Documents My Company Documents : Delete Other Documents",
              "timedOut": null,
              "duration": 3260,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ce7daa08-d430-4fab-bae2-4ddff40c8ada",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Validate existing template and categories",
              "fullTitle": "Documents My Company Documents (EDGE) : Validate existing template and categories",
              "timedOut": null,
              "duration": 1920,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "96fee7cc-4023-4697-93c5-a1ec0d243552",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types",
              "fullTitle": "Documents My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types",
              "timedOut": null,
              "duration": 4113,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2133933e-e099-466a-ba3d-7d2e01e93a64",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate all required fields on adding Service Provider Contract Information",
              "fullTitle": "Documents My Company Documents (NEGATIVE) : Validate all required fields on adding Service Provider Contract Information",
              "timedOut": null,
              "duration": 1528,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "10bff877-8909-4ed9-bebe-60e1567f69e0",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate email address format",
              "fullTitle": "Documents My Company Documents (NEGATIVE) : Validate email address format",
              "timedOut": null,
              "duration": 3342,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "75a607ed-c8c6-4f7c-b928-13d52dffab1f",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Discard Service Provider Contract Information when closing modal without saving",
              "fullTitle": "Documents My Company Documents (OOTB) : Discard Service Provider Contract Information when closing modal without saving",
              "timedOut": null,
              "duration": 2326,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d13f396d-d2b6-499f-87ac-a996fc65df2c",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Validate Adding Disaster Recovery Plan without attachments",
              "fullTitle": "Documents My Company Documents (EDGE) : Validate Adding Disaster Recovery Plan without attachments",
              "timedOut": null,
              "duration": 6688,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3e04fedd-c154-41af-a839-2feb7d7eaf02",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Attach files on existing Disaster Recovery Plan",
              "fullTitle": "Documents My Company Documents (EDGE) : Attach files on existing Disaster Recovery Plan",
              "timedOut": null,
              "duration": 13322,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b2d28cbc-321a-4e0b-ba7f-fb2fd31f3484",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Discard Disaster Recovery Plan when closing modal without saving",
              "fullTitle": "Documents My Company Documents (OOTB) : Discard Disaster Recovery Plan when closing modal without saving",
              "timedOut": null,
              "duration": 1387,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "40a7051d-2e1d-4020-886d-b648fa53a94c",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Validate Next Button if information details are empty in Disaster Recovery Plan",
              "fullTitle": "Documents My Company Documents (OOTB) : Validate Next Button if information details are empty in Disaster Recovery Plan",
              "timedOut": null,
              "duration": 5868,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1f358c7c-73b6-44d7-846e-2d1cfcbae203",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Validate Adding Other Documents without attachments",
              "fullTitle": "Documents My Company Documents (EDGE) : Validate Adding Other Documents without attachments",
              "timedOut": null,
              "duration": 6626,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "704be797-fa8b-4fae-b5a1-ccbb63c6a4ab",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Attach files on Other Documents",
              "fullTitle": "Documents My Company Documents (EDGE) : Attach files on Other Documents",
              "timedOut": null,
              "duration": 12591,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7b591560-d605-4b2b-8063-1b204b565238",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Discard Other Documents when closing modal without saving",
              "fullTitle": "Documents My Company Documents (OOTB) : Discard Other Documents when closing modal without saving",
              "timedOut": null,
              "duration": 3752,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8af4f080-8093-408d-b973-68c848805816",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Validate Next Button if information details are empty in Other Documents",
              "fullTitle": "Documents My Company Documents (OOTB) : Validate Next Button if information details are empty in Other Documents",
              "timedOut": null,
              "duration": 4272,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "99491a42-ea6b-43f3-8ee7-19059eea493f",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types in Other Documents",
              "fullTitle": "Documents My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types in Other Documents",
              "timedOut": null,
              "duration": 11073,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3c724532-b7d1-498d-a375-d2c8d0abf90b",
              "parentUUID": "c39e42b1-22ca-45ad-9d46-1da36ad52f22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7d2afe4-b074-4f14-9abb-3a58f56220a3",
            "84c8cea9-e53a-4755-99e9-05ee60db54e8",
            "d9dccbb9-9342-45a8-800b-e21fa222be5a",
            "974c9a92-6893-462d-94d4-5555f67f507b",
            "d3c4d015-a92f-4917-8f23-ceea26a4abc6",
            "5575cb6f-4e08-47e3-b5b8-7bee4b09e7f4",
            "f9dbc6c3-58af-4e4a-9919-b541051174e9",
            "824ad542-06ce-41e4-aaf3-4e2b43f553cf",
            "fcd61674-2f0e-4ba4-8990-11d24ef22593",
            "d619fcbc-6d84-4b35-8453-5e1a891d397b",
            "863cffea-2a86-45c1-8057-0760b6b01b87",
            "ce7daa08-d430-4fab-bae2-4ddff40c8ada",
            "96fee7cc-4023-4697-93c5-a1ec0d243552",
            "2133933e-e099-466a-ba3d-7d2e01e93a64",
            "10bff877-8909-4ed9-bebe-60e1567f69e0",
            "75a607ed-c8c6-4f7c-b928-13d52dffab1f",
            "d13f396d-d2b6-499f-87ac-a996fc65df2c",
            "3e04fedd-c154-41af-a839-2feb7d7eaf02",
            "b2d28cbc-321a-4e0b-ba7f-fb2fd31f3484",
            "40a7051d-2e1d-4020-886d-b648fa53a94c",
            "1f358c7c-73b6-44d7-846e-2d1cfcbae203",
            "704be797-fa8b-4fae-b5a1-ccbb63c6a4ab",
            "7b591560-d605-4b2b-8063-1b204b565238",
            "8af4f080-8093-408d-b973-68c848805816",
            "99491a42-ea6b-43f3-8ee7-19059eea493f",
            "3c724532-b7d1-498d-a375-d2c8d0abf90b"
          ],
          "failures": [
            "609f0501-df99-4eab-98b7-93de3d975c9c",
            "7e069b10-1f19-449e-a721-2f79c3ac63c2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 412319,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5431a3b0-e4f0-479d-8653-b54a6874e128",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\my-company\\employee_assessments.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\my-company\\employee_assessments.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c7e4fde-20cc-457c-b14b-c8bcfb70cbed",
          "title": "Employee Assessments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company - Employee Assessments : Default items should visible",
              "fullTitle": "Employee Assessments My Company - Employee Assessments : Default items should visible",
              "timedOut": null,
              "duration": 32447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "592b5e4b-c1e1-41af-a1d3-f6df44c15500",
              "parentUUID": "5c7e4fde-20cc-457c-b14b-c8bcfb70cbed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company - Employee Assessments : Check texts/labels if visible",
              "fullTitle": "Employee Assessments My Company - Employee Assessments : Check texts/labels if visible",
              "timedOut": null,
              "duration": 395,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6defa310-49be-483e-a841-ba6a4e4a4d5f",
              "parentUUID": "5c7e4fde-20cc-457c-b14b-c8bcfb70cbed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company - Employee Assessments : Validate Pre-Employment Cybersecurity Assessment",
              "fullTitle": "Employee Assessments My Company - Employee Assessments : Validate Pre-Employment Cybersecurity Assessment",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c4e57adf-e7b8-4a72-9198-a5f9c94ffd27",
              "parentUUID": "5c7e4fde-20cc-457c-b14b-c8bcfb70cbed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company - Employee Assessments : Validate Generate URL Pre-Employment Cybersecurity Assessment",
              "fullTitle": "Employee Assessments My Company - Employee Assessments : Validate Generate URL Pre-Employment Cybersecurity Assessment",
              "timedOut": null,
              "duration": 3000,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e06d6ba6-2320-474f-908b-07bb465bea23",
              "parentUUID": "5c7e4fde-20cc-457c-b14b-c8bcfb70cbed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company - Employee Assessments : Invalidate reused email on generating url",
              "fullTitle": "Employee Assessments My Company - Employee Assessments : Invalidate reused email on generating url",
              "timedOut": null,
              "duration": 6953,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1693ad74-bcf8-4479-8646-9cdd22816b00",
              "parentUUID": "5c7e4fde-20cc-457c-b14b-c8bcfb70cbed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company - Employee Assessments : Validate Pre-Employment Reports",
              "fullTitle": "Employee Assessments My Company - Employee Assessments : Validate Pre-Employment Reports",
              "timedOut": null,
              "duration": 1978,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "58d8a138-9400-45dc-b923-587d8480d259",
              "parentUUID": "5c7e4fde-20cc-457c-b14b-c8bcfb70cbed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company - Employee Assessments : Validate searching registered emails",
              "fullTitle": "Employee Assessments My Company - Employee Assessments : Validate searching registered emails",
              "timedOut": null,
              "duration": 1416,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4c988b53-0f4c-4f1d-9afd-95297f23883f",
              "parentUUID": "5c7e4fde-20cc-457c-b14b-c8bcfb70cbed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company - Employee Assessments : Invalidate searching unregistered emails",
              "fullTitle": "Employee Assessments My Company - Employee Assessments : Invalidate searching unregistered emails",
              "timedOut": null,
              "duration": 2816,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f37622f8-8e1b-4148-aa0b-18180626f351",
              "parentUUID": "5c7e4fde-20cc-457c-b14b-c8bcfb70cbed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "592b5e4b-c1e1-41af-a1d3-f6df44c15500",
            "6defa310-49be-483e-a841-ba6a4e4a4d5f",
            "c4e57adf-e7b8-4a72-9198-a5f9c94ffd27",
            "e06d6ba6-2320-474f-908b-07bb465bea23",
            "1693ad74-bcf8-4479-8646-9cdd22816b00",
            "58d8a138-9400-45dc-b923-587d8480d259",
            "4c988b53-0f4c-4f1d-9afd-95297f23883f",
            "f37622f8-8e1b-4148-aa0b-18180626f351"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49172,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "87475cc9-03de-47c5-8ba0-02a6fff36351",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\my-company\\policies.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\my-company\\policies.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
          "title": "Policy & Procedure",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company Policies : Default items should visible",
              "fullTitle": "Policy & Procedure My Company Policies : Default items should visible",
              "timedOut": null,
              "duration": 48340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1e40e7ac-5934-4f42-98bc-549d61524e22",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Check texts/labels if visible",
              "fullTitle": "Policy & Procedure My Company Policies : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2124,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "75d77949-dcdc-4cbb-966b-1f99046935af",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Validate Existing Policy",
              "fullTitle": "Policy & Procedure My Company Policies : Validate Existing Policy",
              "timedOut": null,
              "duration": 6392,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8bd54559-c217-46e7-8caf-3fd7216580ec",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Download file in existing policy modal",
              "fullTitle": "Policy & Procedure My Company Policies : Download file in existing policy modal",
              "timedOut": null,
              "duration": 4551,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1823996f-6178-4bc8-8386-51e71b8bc485",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Validate Other Policies",
              "fullTitle": "Policy & Procedure My Company Policies : Validate Other Policies",
              "timedOut": null,
              "duration": 3506,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "079f14e5-5e11-47aa-8389-96c37a068dac",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Add New Policy",
              "fullTitle": "Policy & Procedure My Company Policies : Add New Policy",
              "timedOut": null,
              "duration": 10825,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5ef08c95-6f57-4371-becb-db7311b3577c",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Download file in Other Policies and Procedure",
              "fullTitle": "Policy & Procedure My Company Policies : Download file in Other Policies and Procedure",
              "timedOut": null,
              "duration": 2385,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cd9566d0-c222-4f7b-973b-fc430e00ed4a",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Validate Added Other Policies and Procedure",
              "fullTitle": "Policy & Procedure My Company Policies : Validate Added Other Policies and Procedure",
              "timedOut": null,
              "duration": 9433,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8b29158f-4809-4e16-8760-ca4a1e5158ab",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Edit Other Policies and Procedure",
              "fullTitle": "Policy & Procedure My Company Policies : Edit Other Policies and Procedure",
              "timedOut": null,
              "duration": 9922,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "03b793b2-0c2e-4f8a-89c1-eba92ed1a0ac",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Delete Other Policies and Procedure",
              "fullTitle": "Policy & Procedure My Company Policies : Delete Other Policies and Procedure",
              "timedOut": null,
              "duration": 3329,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d79830fe-85c5-40b3-9ca6-70b779dab3b0",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies (OOTB) : Validate API status when downloading all existing policies",
              "fullTitle": "Policy & Procedure My Company Policies (OOTB) : Validate API status when downloading all existing policies",
              "timedOut": null,
              "duration": 7415,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "90b0d232-745f-4575-b314-693eaf7184dc",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies (OOTB) : Validate API status when downloading single file",
              "fullTitle": "Policy & Procedure My Company Policies (OOTB) : Validate API status when downloading single file",
              "timedOut": null,
              "duration": 3909,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f59f070b-d7f1-4e00-84cb-a087346672b3",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate Next Button if information details are empty when adding Security Policies & Procedures",
              "fullTitle": "Policy & Procedure My Company Documents (NEGATIVE) : Validate Next Button if information details are empty when adding Security Policies & Procedures",
              "timedOut": null,
              "duration": 6218,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d2b4ac28-c5f0-4e67-a7ab-ec8207f67d64",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Discard saving new Security Policies & Procedures when closing modal",
              "fullTitle": "Policy & Procedure My Company Documents (NEGATIVE) : Discard saving new Security Policies & Procedures when closing modal",
              "timedOut": null,
              "duration": 5271,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "098c9fa3-3378-4a57-843f-9c832c441a4f",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types",
              "fullTitle": "Policy & Procedure My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types",
              "timedOut": null,
              "duration": 3868,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ba2411aa-3eec-4281-b52e-943f4d67f444",
              "parentUUID": "b3ba544a-0e80-454f-98d5-2baee4f86ea8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e40e7ac-5934-4f42-98bc-549d61524e22",
            "75d77949-dcdc-4cbb-966b-1f99046935af",
            "8bd54559-c217-46e7-8caf-3fd7216580ec",
            "1823996f-6178-4bc8-8386-51e71b8bc485",
            "079f14e5-5e11-47aa-8389-96c37a068dac",
            "5ef08c95-6f57-4371-becb-db7311b3577c",
            "cd9566d0-c222-4f7b-973b-fc430e00ed4a",
            "8b29158f-4809-4e16-8760-ca4a1e5158ab",
            "03b793b2-0c2e-4f8a-89c1-eba92ed1a0ac",
            "d79830fe-85c5-40b3-9ca6-70b779dab3b0",
            "90b0d232-745f-4575-b314-693eaf7184dc",
            "f59f070b-d7f1-4e00-84cb-a087346672b3",
            "d2b4ac28-c5f0-4e67-a7ab-ec8207f67d64",
            "098c9fa3-3378-4a57-843f-9c832c441a4f",
            "ba2411aa-3eec-4281-b52e-943f4d67f444"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 127488,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6f825e40-289e-4d2f-add3-c14fb7d49682",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\my-company\\sra.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\my-company\\sra.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
          "title": "SRA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company SRA : Default items should visible",
              "fullTitle": "SRA My Company SRA : Default items should visible",
              "timedOut": null,
              "duration": 33216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e6846f6a-e3d4-46fc-a551-f579d3ea2b10",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Check texts/labels if visible",
              "fullTitle": "SRA My Company SRA : Check texts/labels if visible",
              "timedOut": null,
              "duration": 5964,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "30b44ec3-ea8e-4385-b80c-17f514b47ef0",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Name and Location",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Name and Location",
              "timedOut": null,
              "duration": 16158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e0dbafd6-bc0e-4f86-a253-3ad1f8b347c7",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Network",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Network",
              "timedOut": null,
              "duration": 12701,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "03ca3a85-5116-44e2-ae82-43d753309bbf",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Email",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Email",
              "timedOut": null,
              "duration": 7312,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7b25f8e3-ba7c-4bc5-a319-353cf04b87ea",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Media and Devices",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Media and Devices",
              "timedOut": null,
              "duration": 5236,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "faf68271-33ce-4d68-94ae-118ed3b03143",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - System",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - System",
              "timedOut": null,
              "duration": 11503,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2e68ef4f-df52-498c-9746-9db6b323edf6",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Additional Information",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Additional Information",
              "timedOut": null,
              "duration": 6123,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5a5e4ff8-5383-4d67-840a-b656ab81af06",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (NEGATIVE) - Validate email address format",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (NEGATIVE) - Validate email address format",
              "timedOut": null,
              "duration": 4113,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d3127838-ee8d-494f-aa3a-e77449ea5499",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (NEGATIVE) - Validate data types in all fields in name and location tab",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (NEGATIVE) - Validate data types in all fields in name and location tab",
              "timedOut": null,
              "duration": 6433,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c5f52926-53ea-40a3-8146-e5a6ae05e6e1",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (NEGATIVE) - Validate number fields on Network and System Tab",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (NEGATIVE) - Validate number fields on Network and System Tab",
              "timedOut": null,
              "duration": 5733,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d5800991-845b-414a-9cf0-42773aa7c3bb",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (EDGE)  : Validate API results when saving all data in all tabs",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (EDGE)  : Validate API results when saving all data in all tabs",
              "timedOut": null,
              "duration": 6895,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a509e18c-d4c0-4247-a53f-34980cb7d8ac",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (EDGE)  : Validate saved data in previous tabs",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (EDGE)  : Validate saved data in previous tabs",
              "timedOut": null,
              "duration": 1778,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cda3ccfc-2cbf-41e2-8a53-9c448fcea6b7",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (OOTB)  : Validate API click event when changing tabs",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (OOTB)  : Validate API click event when changing tabs",
              "timedOut": null,
              "duration": 3341,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9be2c4f5-a306-4ae6-a382-edaf857933c8",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (OOTB)  : Invalidate updating data without saving",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (OOTB)  : Invalidate updating data without saving",
              "timedOut": null,
              "duration": 10080,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a2664251-cde8-4f82-8e28-84d325114787",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 - Answer The Security Risk Assessment Questions",
              "fullTitle": "SRA My Company SRA : Open Step 02 - Answer The Security Risk Assessment Questions",
              "timedOut": null,
              "duration": 2238,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "66e177c6-c03d-47e2-bda5-5bd78214ae4b",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 - Save SRA Answers",
              "fullTitle": "SRA My Company SRA : Open Step 02 - Save SRA Answers",
              "timedOut": null,
              "duration": 83517,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "44225020-1f1a-4e02-a5ed-9a8ec66d79e0",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (EDGE) : Validate All list of questions based on categories",
              "fullTitle": "SRA My Company SRA : Open Step 02 (EDGE) : Validate All list of questions based on categories",
              "timedOut": null,
              "duration": 281303,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "28b3e983-82fb-4acb-b32a-ed4a6d2bdb7e",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (EDGE) : Validate API results when saving questions",
              "fullTitle": "SRA My Company SRA : Open Step 02 (EDGE) : Validate API results when saving questions",
              "timedOut": null,
              "duration": 7611,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d9806c74-968f-4d45-bdc2-7e2beff7683b",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (NEGATIVE) : Invalidate answers without saving",
              "fullTitle": "SRA My Company SRA : Open Step 02 (NEGATIVE) : Invalidate answers without saving",
              "timedOut": null,
              "duration": 343,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b5d34f08-32d0-4d5e-a38f-7c9f67aa01dd",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (NEGATIVE) : Disable return to previous button if first question is active",
              "fullTitle": "SRA My Company SRA : Open Step 02 (NEGATIVE) : Disable return to previous button if first question is active",
              "timedOut": null,
              "duration": 397,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "41285dab-f5c9-44c2-a6bb-34249d400f5c",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (NEGATIVE) : Validate save and next step button on the last question",
              "fullTitle": "SRA My Company SRA : Open Step 02 (NEGATIVE) : Validate save and next step button on the last question",
              "timedOut": null,
              "duration": 5480,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fce83eef-1c64-4332-8cd1-0fa09b364769",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (OOTB) : Validate API click event when changing answers",
              "fullTitle": "SRA My Company SRA : Open Step 02 (OOTB) : Validate API click event when changing answers",
              "timedOut": null,
              "duration": 16295,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f83709c8-1aa8-4dd5-aa95-dccb903a359f",
              "parentUUID": "cfc60dbd-b8a3-449b-98a2-d6db2c37dae9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e6846f6a-e3d4-46fc-a551-f579d3ea2b10",
            "30b44ec3-ea8e-4385-b80c-17f514b47ef0",
            "e0dbafd6-bc0e-4f86-a253-3ad1f8b347c7",
            "03ca3a85-5116-44e2-ae82-43d753309bbf",
            "7b25f8e3-ba7c-4bc5-a319-353cf04b87ea",
            "faf68271-33ce-4d68-94ae-118ed3b03143",
            "2e68ef4f-df52-498c-9746-9db6b323edf6",
            "5a5e4ff8-5383-4d67-840a-b656ab81af06",
            "d3127838-ee8d-494f-aa3a-e77449ea5499",
            "c5f52926-53ea-40a3-8146-e5a6ae05e6e1",
            "d5800991-845b-414a-9cf0-42773aa7c3bb",
            "a509e18c-d4c0-4247-a53f-34980cb7d8ac",
            "cda3ccfc-2cbf-41e2-8a53-9c448fcea6b7",
            "9be2c4f5-a306-4ae6-a382-edaf857933c8",
            "a2664251-cde8-4f82-8e28-84d325114787",
            "66e177c6-c03d-47e2-bda5-5bd78214ae4b",
            "44225020-1f1a-4e02-a5ed-9a8ec66d79e0",
            "28b3e983-82fb-4acb-b32a-ed4a6d2bdb7e",
            "d9806c74-968f-4d45-bdc2-7e2beff7683b",
            "b5d34f08-32d0-4d5e-a38f-7c9f67aa01dd",
            "41285dab-f5c9-44c2-a6bb-34249d400f5c",
            "fce83eef-1c64-4332-8cd1-0fa09b364769",
            "f83709c8-1aa8-4dd5-aa95-dccb903a359f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 533770,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "77ec125d-84d3-4915-9fee-eae7c2f83632",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\my-company\\sra_report.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\my-company\\sra_report.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e6e64687-58e2-435d-b987-6f58369bbf01",
          "title": "SRA Report",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company SRA Report : Default items should visible",
              "fullTitle": "SRA Report My Company SRA Report : Default items should visible",
              "timedOut": null,
              "duration": 32515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6fcea492-1fde-4356-8018-2ba57323f4f1",
              "parentUUID": "e6e64687-58e2-435d-b987-6f58369bbf01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Check texts/labels if visible",
              "fullTitle": "SRA Report My Company SRA Report : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2383,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f5d96ad3-a385-495d-bc09-572963a93659",
              "parentUUID": "e6e64687-58e2-435d-b987-6f58369bbf01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Add Security Incidents",
              "fullTitle": "SRA Report My Company SRA Report : Add Security Incidents",
              "timedOut": null,
              "duration": 10512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a8397eee-b148-4dd3-bc0c-a5c0088a0f59",
              "parentUUID": "e6e64687-58e2-435d-b987-6f58369bbf01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Validate created SRA Document",
              "fullTitle": "SRA Report My Company SRA Report : Validate created SRA Document",
              "timedOut": null,
              "duration": 2076,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "465feb43-1259-4ffa-ac39-cd1bab6931dd",
              "parentUUID": "e6e64687-58e2-435d-b987-6f58369bbf01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Edit existing SRA Document",
              "fullTitle": "SRA Report My Company SRA Report : Edit existing SRA Document",
              "timedOut": null,
              "duration": 9716,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a3367b4b-d075-4ea4-8e1c-37b8f4050cd2",
              "parentUUID": "e6e64687-58e2-435d-b987-6f58369bbf01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report (OOTB) : Validate uploading oversize file",
              "fullTitle": "SRA Report My Company SRA Report (OOTB) : Validate uploading oversize file",
              "timedOut": null,
              "duration": 17502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8d0d0ec2-95f9-4585-893c-df218a2b584a",
              "parentUUID": "e6e64687-58e2-435d-b987-6f58369bbf01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Delete existing SRA Document",
              "fullTitle": "SRA Report My Company SRA Report : Delete existing SRA Document",
              "timedOut": null,
              "duration": 3772,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "72214dcc-250b-4517-8b80-20b8d163ed64",
              "parentUUID": "e6e64687-58e2-435d-b987-6f58369bbf01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Download SRA Appendix",
              "fullTitle": "SRA Report My Company SRA Report : Download SRA Appendix",
              "timedOut": null,
              "duration": 2589,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e1f3a25d-d392-440a-93ca-9422d810057a",
              "parentUUID": "e6e64687-58e2-435d-b987-6f58369bbf01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6fcea492-1fde-4356-8018-2ba57323f4f1",
            "f5d96ad3-a385-495d-bc09-572963a93659",
            "a8397eee-b148-4dd3-bc0c-a5c0088a0f59",
            "465feb43-1259-4ffa-ac39-cd1bab6931dd",
            "a3367b4b-d075-4ea4-8e1c-37b8f4050cd2",
            "8d0d0ec2-95f9-4585-893c-df218a2b584a",
            "72214dcc-250b-4517-8b80-20b8d163ed64",
            "e1f3a25d-d392-440a-93ca-9422d810057a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 81065,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "190daa48-3ee4-4020-b8c5-ea7f9cccfeea",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\my-company\\track.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\my-company\\track.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "85b5dece-d081-4539-8df0-07da14fb05e1",
          "title": "Tracking",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company Track : Default items should visible",
              "fullTitle": "Tracking My Company Track : Default items should visible",
              "timedOut": null,
              "duration": 32574,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9292edf0-9a38-4b44-b1fc-b16f522a158f",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Check texts/labels if visible",
              "fullTitle": "Tracking My Company Track : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e3391a06-ac84-4039-9656-2aef0d4eb61d",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Add Security Incidents",
              "fullTitle": "Tracking My Company Track : Add Security Incidents",
              "timedOut": null,
              "duration": 14296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9f35ac72-f594-4f3d-a2e0-93dbcdabc07f",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Validate created Security Incidents",
              "fullTitle": "Tracking My Company Track : Validate created Security Incidents",
              "timedOut": null,
              "duration": 2118,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "83597fda-cd1a-40d6-9cbd-e6f2b9220b05",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Edit existing Security Incidents",
              "fullTitle": "Tracking My Company Track : Edit existing Security Incidents",
              "timedOut": null,
              "duration": 16399,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1660bcca-84eb-4b57-8f96-981f1ecb99dc",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Delete Security Incidents",
              "fullTitle": "Tracking My Company Track : Delete Security Incidents",
              "timedOut": null,
              "duration": 4266,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7f595443-bca0-4bb4-9d11-3d3cd33d2ab1",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Add Server Room Access",
              "fullTitle": "Tracking My Company Track : Add Server Room Access",
              "timedOut": null,
              "duration": 8102,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "79df5846-367b-40a2-a5df-d80358e399c0",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Validate Server Room Access",
              "fullTitle": "Tracking My Company Track : Validate Server Room Access",
              "timedOut": null,
              "duration": 2111,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "27fde5d1-5821-475c-9827-53ab758e53a5",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Edit Server Room Access",
              "fullTitle": "Tracking My Company Track : Edit Server Room Access",
              "timedOut": null,
              "duration": 11302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "98b219f4-a1d7-4842-9039-f64a6d5f426f",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Delete Server Room Access",
              "fullTitle": "Tracking My Company Track : Delete Server Room Access",
              "timedOut": null,
              "duration": 3801,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0f1d69f8-6f6e-4761-8381-3f6fb7ef203f",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (NEGATIVE): Validate Number of Records on Security Incident",
              "fullTitle": "Tracking My Company Track (NEGATIVE): Validate Number of Records on Security Incident",
              "timedOut": null,
              "duration": 3920,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cbbd21fc-01f1-4b37-91a2-6e099a9b7ff3",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (NEGATIVE): Invalidate creating new Security Incident when Discovery Date is prior to Date of Incident",
              "fullTitle": "Tracking My Company Track (NEGATIVE): Invalidate creating new Security Incident when Discovery Date is prior to Date of Incident",
              "timedOut": null,
              "duration": 5590,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c8a49463-ed49-442b-84c1-149ee5b54394",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (NEGATIVE): Validate other system involved textbox",
              "fullTitle": "Tracking My Company Track (NEGATIVE): Validate other system involved textbox",
              "timedOut": null,
              "duration": 4314,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dab3fe31-d297-40bf-b4a9-426f557c5ac3",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (OOTB): Validate saving Security Incident when description of incident has 4 or more characters",
              "fullTitle": "Tracking My Company Track (OOTB): Validate saving Security Incident when description of incident has 4 or more characters",
              "timedOut": null,
              "duration": 4264,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "55480b15-8b00-4928-ae1a-30544705c455",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (OOTB): Validate API click event when closing Security Incident modal",
              "fullTitle": "Tracking My Company Track (OOTB): Validate API click event when closing Security Incident modal",
              "timedOut": null,
              "duration": 3874,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c3d913d6-f207-4c0c-a009-6f3af4ad9344",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (EDGE): Validate cancelation on creating Security Incident",
              "fullTitle": "Tracking My Company Track (EDGE): Validate cancelation on creating Security Incident",
              "timedOut": null,
              "duration": 3517,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1bd9d11a-a44f-4e34-bb88-a3d31dc878d6",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (EDGE): Validate other cause of incident textbox",
              "fullTitle": "Tracking My Company Track (EDGE): Validate other cause of incident textbox",
              "timedOut": null,
              "duration": 4965,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "16aaaaa1-a316-43c1-978c-827c107662e7",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (NEGATIVE): Validate What was changed textarea",
              "fullTitle": "Tracking My Company Track (NEGATIVE): Validate What was changed textarea",
              "timedOut": null,
              "duration": 5357,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bc665d18-a651-485f-8bfd-ff38bf21d55b",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (OOTB): Validate saving Server Room Access when Person accessing server room has 4 or more characters",
              "fullTitle": "Tracking My Company Track (OOTB): Validate saving Server Room Access when Person accessing server room has 4 or more characters",
              "timedOut": null,
              "duration": 3874,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "02fa4ca1-3460-4e30-828c-d5d89bd183ef",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (OOTB): Validate API click event when closing and open Server Room Access modal",
              "fullTitle": "Tracking My Company Track (OOTB): Validate API click event when closing and open Server Room Access modal",
              "timedOut": null,
              "duration": 2057,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "709f7e4f-44b4-4993-8075-9d5b07335fed",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (EDGE): Validate cancelation on creating Server Room Access",
              "fullTitle": "Tracking My Company Track (EDGE): Validate cancelation on creating Server Room Access",
              "timedOut": null,
              "duration": 3113,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6b742c72-afbf-425e-8df9-8756cbe0d5bc",
              "parentUUID": "85b5dece-d081-4539-8df0-07da14fb05e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9292edf0-9a38-4b44-b1fc-b16f522a158f",
            "e3391a06-ac84-4039-9656-2aef0d4eb61d",
            "9f35ac72-f594-4f3d-a2e0-93dbcdabc07f",
            "83597fda-cd1a-40d6-9cbd-e6f2b9220b05",
            "1660bcca-84eb-4b57-8f96-981f1ecb99dc",
            "7f595443-bca0-4bb4-9d11-3d3cd33d2ab1",
            "79df5846-367b-40a2-a5df-d80358e399c0",
            "27fde5d1-5821-475c-9827-53ab758e53a5",
            "98b219f4-a1d7-4842-9039-f64a6d5f426f",
            "0f1d69f8-6f6e-4761-8381-3f6fb7ef203f",
            "cbbd21fc-01f1-4b37-91a2-6e099a9b7ff3",
            "c8a49463-ed49-442b-84c1-149ee5b54394",
            "dab3fe31-d297-40bf-b4a9-426f557c5ac3",
            "55480b15-8b00-4928-ae1a-30544705c455",
            "c3d913d6-f207-4c0c-a009-6f3af4ad9344",
            "1bd9d11a-a44f-4e34-bb88-a3d31dc878d6",
            "16aaaaa1-a316-43c1-978c-827c107662e7",
            "bc665d18-a651-485f-8bfd-ff38bf21d55b",
            "02fa4ca1-3460-4e30-828c-d5d89bd183ef",
            "709f7e4f-44b4-4993-8075-9d5b07335fed",
            "6b742c72-afbf-425e-8df9-8756cbe0d5bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 141999,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "37f94c4f-b883-4418-b7c8-9186af0d4b67",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\my-company\\training_reports.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\my-company\\training_reports.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "98f8b3ed-eb13-4a5a-b60f-e27713df96de",
          "title": "Training Reports",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company Training Reports : Default items should visible on Annual Training",
              "fullTitle": "Training Reports My Company Training Reports : Default items should visible on Annual Training",
              "timedOut": null,
              "duration": 33111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "11663478-8847-4223-a73b-993a4ca8ad00",
              "parentUUID": "98f8b3ed-eb13-4a5a-b60f-e27713df96de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Check texts/labels if visible on Micro Training",
              "fullTitle": "Training Reports My Company Training Reports : Check texts/labels if visible on Micro Training",
              "timedOut": null,
              "duration": 2405,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0ce9e374-abba-4566-9ce2-8eacb2a6ed2a",
              "parentUUID": "98f8b3ed-eb13-4a5a-b60f-e27713df96de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Download Annual Training Report",
              "fullTitle": "Training Reports My Company Training Reports : Download Annual Training Report",
              "timedOut": null,
              "duration": 2255,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a0448a54-225e-4cd8-8aa3-9ae38bd0e110",
              "parentUUID": "98f8b3ed-eb13-4a5a-b60f-e27713df96de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : View and download certificate",
              "fullTitle": "Training Reports My Company Training Reports : View and download certificate",
              "timedOut": null,
              "duration": 9412,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f7c41d2d-8ed5-434a-b625-b4358b917549",
              "parentUUID": "98f8b3ed-eb13-4a5a-b60f-e27713df96de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Validate current course",
              "fullTitle": "Training Reports My Company Training Reports : Validate current course",
              "timedOut": null,
              "duration": 6181,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "006d4c7d-8e81-4ac1-9282-f943d87f7a90",
              "parentUUID": "98f8b3ed-eb13-4a5a-b60f-e27713df96de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : View Micro Training",
              "fullTitle": "Training Reports My Company Training Reports : View Micro Training",
              "timedOut": null,
              "duration": 8220,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "682d429a-dabe-49b6-8683-ff501257d5e9",
              "parentUUID": "98f8b3ed-eb13-4a5a-b60f-e27713df96de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : View by users",
              "fullTitle": "Training Reports My Company Training Reports : View by users",
              "timedOut": null,
              "duration": 6874,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "13eb7786-24c8-49f1-b327-33dee60365a3",
              "parentUUID": "98f8b3ed-eb13-4a5a-b60f-e27713df96de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Download Micro Training",
              "fullTitle": "Training Reports My Company Training Reports : Download Micro Training",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "59617450-422f-4c41-90d4-b6a986634a3d",
              "parentUUID": "98f8b3ed-eb13-4a5a-b60f-e27713df96de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Validate search on non-existing users",
              "fullTitle": "Training Reports My Company Training Reports : Validate search on non-existing users",
              "timedOut": null,
              "duration": 8243,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "03bec9ca-0279-4716-acc5-9cf753facf39",
              "parentUUID": "98f8b3ed-eb13-4a5a-b60f-e27713df96de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Validate search on micro training",
              "fullTitle": "Training Reports My Company Training Reports : Validate search on micro training",
              "timedOut": null,
              "duration": 8579,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cb50d308-36d6-4b8c-aeb0-b80aa9d8736f",
              "parentUUID": "98f8b3ed-eb13-4a5a-b60f-e27713df96de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11663478-8847-4223-a73b-993a4ca8ad00",
            "0ce9e374-abba-4566-9ce2-8eacb2a6ed2a",
            "a0448a54-225e-4cd8-8aa3-9ae38bd0e110",
            "f7c41d2d-8ed5-434a-b625-b4358b917549",
            "006d4c7d-8e81-4ac1-9282-f943d87f7a90",
            "682d429a-dabe-49b6-8683-ff501257d5e9",
            "13eb7786-24c8-49f1-b327-33dee60365a3",
            "59617450-422f-4c41-90d4-b6a986634a3d",
            "03bec9ca-0279-4716-acc5-9cf753facf39",
            "cb50d308-36d6-4b8c-aeb0-b80aa9d8736f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 85360,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b42fec5a-74c4-41c5-b40d-2f79c9bf8c76",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\my-dashboard\\manager-dark-web.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\my-dashboard\\manager-dark-web.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a3145b1b-440e-47d0-a9a5-14e8b1af2b76",
          "title": "Dark Web - Run DWBA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Dark Web : Default items should visible",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Default items should visible",
              "timedOut": null,
              "duration": 34002,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a909624b-5a3a-4431-a828-c7bea0da90a1",
              "parentUUID": "a3145b1b-440e-47d0-a9a5-14e8b1af2b76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Check texts/labels if visible",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Check texts/labels if visible",
              "timedOut": null,
              "duration": 311,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a5e3eeae-ee26-4664-9f93-bfd997a9790e",
              "parentUUID": "a3145b1b-440e-47d0-a9a5-14e8b1af2b76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Validate check emails associated with any external data breaches",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Validate check emails associated with any external data breaches",
              "timedOut": null,
              "duration": 5718,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fd825ee9-2238-47d5-ba5b-01430484513b",
              "parentUUID": "a3145b1b-440e-47d0-a9a5-14e8b1af2b76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Validate check emails not associated with any external data breaches",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Validate check emails not associated with any external data breaches",
              "timedOut": null,
              "duration": 2539,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "126afc19-0c98-487a-a37e-ca558b59145c",
              "parentUUID": "a3145b1b-440e-47d0-a9a5-14e8b1af2b76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Invalidate checking with empty email address field",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Invalidate checking with empty email address field",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7b740564-ad24-4365-a594-47bf0599ceab",
              "parentUUID": "a3145b1b-440e-47d0-a9a5-14e8b1af2b76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Invalidate check email with invalid email format",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Invalidate check email with invalid email format",
              "timedOut": null,
              "duration": 872,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ddc02731-e189-4fd5-8481-7308b400e7cb",
              "parentUUID": "a3145b1b-440e-47d0-a9a5-14e8b1af2b76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Validate table results after updating or clearing email address field",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Validate table results after updating or clearing email address field",
              "timedOut": null,
              "duration": 5886,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2fba5460-ae65-41df-9a1a-2177da7e5ddd",
              "parentUUID": "a3145b1b-440e-47d0-a9a5-14e8b1af2b76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (OOTB) : Reset table results after page refresh",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (OOTB) : Reset table results after page refresh",
              "timedOut": null,
              "duration": 5746,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "47dc53cf-1bd8-4a0e-8c74-31ca2e2bb1bc",
              "parentUUID": "a3145b1b-440e-47d0-a9a5-14e8b1af2b76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (OOTB) : Validate API results when generating results",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (OOTB) : Validate API results when generating results",
              "timedOut": null,
              "duration": 7671,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f9a2d7c7-fb0a-47d5-bf00-3d4b8eda4f23",
              "parentUUID": "a3145b1b-440e-47d0-a9a5-14e8b1af2b76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (EDGE) : Validate column sorting",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (EDGE) : Validate column sorting",
              "timedOut": null,
              "duration": 9635,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a5d497db-6f03-440e-99d7-27b96d19544a",
              "parentUUID": "a3145b1b-440e-47d0-a9a5-14e8b1af2b76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (EDGE) : Validate return results on Compromised Data",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (EDGE) : Validate return results on Compromised Data",
              "timedOut": null,
              "duration": 266,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "99fa6b0a-e58a-4221-a1ca-380547a77852",
              "parentUUID": "a3145b1b-440e-47d0-a9a5-14e8b1af2b76",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a909624b-5a3a-4431-a828-c7bea0da90a1",
            "a5e3eeae-ee26-4664-9f93-bfd997a9790e",
            "fd825ee9-2238-47d5-ba5b-01430484513b",
            "126afc19-0c98-487a-a37e-ca558b59145c",
            "7b740564-ad24-4365-a594-47bf0599ceab",
            "ddc02731-e189-4fd5-8481-7308b400e7cb",
            "2fba5460-ae65-41df-9a1a-2177da7e5ddd",
            "47dc53cf-1bd8-4a0e-8c74-31ca2e2bb1bc",
            "f9a2d7c7-fb0a-47d5-bf00-3d4b8eda4f23",
            "a5d497db-6f03-440e-99d7-27b96d19544a",
            "99fa6b0a-e58a-4221-a1ca-380547a77852"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 72902,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c0047519-9c52-482c-ae41-63747a41917f",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\my-dashboard\\manager-dashboard.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\my-dashboard\\manager-dashboard.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6dbe28aa-a024-483e-bb3d-2ed677567db9",
          "title": "Manager - My Dashboard",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Company Average Employee Secure Score (ESS) : Default items should visible",
              "fullTitle": "Manager - My Dashboard Company Average Employee Secure Score (ESS) : Default items should visible",
              "timedOut": null,
              "duration": 29238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3588a77d-4b37-444d-a177-9bd30f9b48a8",
              "parentUUID": "6dbe28aa-a024-483e-bb3d-2ed677567db9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average Employee Secure Score (ESS) : Check texts/labels if visible",
              "fullTitle": "Manager - My Dashboard Company Average Employee Secure Score (ESS) : Check texts/labels if visible",
              "timedOut": null,
              "duration": 535,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e33b00fc-03b3-4c28-ba3f-bced354d31bf",
              "parentUUID": "6dbe28aa-a024-483e-bb3d-2ed677567db9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average ESS Trend : Default items should visible",
              "fullTitle": "Manager - My Dashboard Company Average ESS Trend : Default items should visible",
              "timedOut": null,
              "duration": 2015,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cc996878-cd79-43e5-af0e-e184b6c7babe",
              "parentUUID": "6dbe28aa-a024-483e-bb3d-2ed677567db9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average ESS Trend : Check texts/labels if visible",
              "fullTitle": "Manager - My Dashboard Company Average ESS Trend : Check texts/labels if visible",
              "timedOut": null,
              "duration": 815,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d1a733fa-9768-40ac-9ea5-d33b8656629b",
              "parentUUID": "6dbe28aa-a024-483e-bb3d-2ed677567db9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Improve your ESS : Default items should visible",
              "fullTitle": "Manager - My Dashboard Improve your ESS : Default items should visible",
              "timedOut": null,
              "duration": 1231,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c90b394b-3f16-4610-9bec-6fa560c508f3",
              "parentUUID": "6dbe28aa-a024-483e-bb3d-2ed677567db9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Improve your ESS : Check texts/labels if visible",
              "fullTitle": "Manager - My Dashboard Improve your ESS : Check texts/labels if visible",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b6306cfe-dd21-417c-9725-4a0d461df6ef",
              "parentUUID": "6dbe28aa-a024-483e-bb3d-2ed677567db9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "External Data Breaches : Default items should visible",
              "fullTitle": "Manager - My Dashboard External Data Breaches : Default items should visible",
              "timedOut": null,
              "duration": 1215,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a92c71a0-6690-4b0b-9f15-d23814ff721d",
              "parentUUID": "6dbe28aa-a024-483e-bb3d-2ed677567db9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "External Data Breaches : Check texts/labels if visible",
              "fullTitle": "Manager - My Dashboard External Data Breaches : Check texts/labels if visible",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "70f86b88-83c9-479f-ab8f-7aa592b8689f",
              "parentUUID": "6dbe28aa-a024-483e-bb3d-2ed677567db9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Chart Bar : Default items should visible",
              "fullTitle": "Manager - My Dashboard Chart Bar : Default items should visible",
              "timedOut": null,
              "duration": 1204,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f6f5b6e9-7802-4070-b1b0-a281634a483c",
              "parentUUID": "6dbe28aa-a024-483e-bb3d-2ed677567db9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Chart Bar : Check texts/labels if visible",
              "fullTitle": "Manager - My Dashboard Chart Bar : Check texts/labels if visible",
              "timedOut": null,
              "duration": 416,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "02ed7839-a62f-48ef-84fc-d660e04ea6c1",
              "parentUUID": "6dbe28aa-a024-483e-bb3d-2ed677567db9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaderboard : Default items should visible",
              "fullTitle": "Manager - My Dashboard Leaderboard : Default items should visible",
              "timedOut": null,
              "duration": 1418,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "37ed0d80-e470-470e-b3c2-6a450eebdc9c",
              "parentUUID": "6dbe28aa-a024-483e-bb3d-2ed677567db9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaderboard : Check texts/labels if visible",
              "fullTitle": "Manager - My Dashboard Leaderboard : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2721,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4c30d815-3379-4449-b9a9-77670dd6ad1c",
              "parentUUID": "6dbe28aa-a024-483e-bb3d-2ed677567db9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3588a77d-4b37-444d-a177-9bd30f9b48a8",
            "e33b00fc-03b3-4c28-ba3f-bced354d31bf",
            "cc996878-cd79-43e5-af0e-e184b6c7babe",
            "d1a733fa-9768-40ac-9ea5-d33b8656629b",
            "c90b394b-3f16-4610-9bec-6fa560c508f3",
            "b6306cfe-dd21-417c-9725-4a0d461df6ef",
            "a92c71a0-6690-4b0b-9f15-d23814ff721d",
            "70f86b88-83c9-479f-ab8f-7aa592b8689f",
            "f6f5b6e9-7802-4070-b1b0-a281634a483c",
            "02ed7839-a62f-48ef-84fc-d660e04ea6c1",
            "37ed0d80-e470-470e-b3c2-6a450eebdc9c",
            "4c30d815-3379-4449-b9a9-77670dd6ad1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 41085,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1b4d994b-0bba-41c5-9228-bb9363894109",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\my-dashboard\\manager-micro-training.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\my-dashboard\\manager-micro-training.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b87cec5-8357-46fb-8a26-1742773f1275",
          "title": "Micro Training",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Micro Training : Default items should visible",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Default items should visible",
              "timedOut": null,
              "duration": 29668,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "56d73d35-20a9-4cbe-8d2a-15d3b0488b0b",
              "parentUUID": "3b87cec5-8357-46fb-8a26-1742773f1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Check texts/labels if visible",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Check texts/labels if visible",
              "timedOut": null,
              "duration": 766,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e2c48574-d0c4-4140-aa51-046b13009aae",
              "parentUUID": "3b87cec5-8357-46fb-8a26-1742773f1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Validate All existing micro Trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Validate All existing micro Trainings",
              "timedOut": null,
              "duration": 140381,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 100000ms: expected '[ <td.MuiTableCell-root-443.MuiTableCell-body-445.ComponentTypes__TableCellContent-sc-nb4o94-11.fstFwt.MuiTableCell-alignLeft-450>, 320 more... ]' to contain text 'The Value of Encryption', but the text was 'SLAM Method: \"S\" is for Sender2022-04-26100Re-watch NowPhishing4012022-04-2675Re-watch NowSLAM Method: \"M\" is for Message2022-04-2675Re-watch NowVacation Scams2022-04-2675Re-watch NowInsider Threats: Intentional2022-04-2650Re-watch NowPassword Managers2022-04-2650Re-watch NowSLAM Method: “L” is for Links2022-04-2650Re-watch NowA Brief History of COVID-19 Scams2022-04-2625Re-watch NowLove Bug2022-04-2625Re-watch NowSLAM Method: \"A\" is for Attachments2022-04-2625Re-watch Now2020 Cybersecurity RecapWatch Now5 Tips For Staying Safe on the CloudWatch Now6 Simple Tips to Protect from Insider ThreatsWatch NowA Scammer\\'s CarolWatch NowBe Cyber SmartWatch NowBEC Scams & CEO FraudWatch NowBest Practices for Safe Social Media UseWatch NowBig Feelings Vs. ScamsWatch NowBreach Lifecycle: The BeginningWatch NowBreach Lifecycle: The EndWatch NowBreach Lifecycle: The MiddleWatch NowCloud JackingWatch NowCombatting Text Message ScamsWatch NowCookiesWatch NowCOVID-19 Vaccine ScamsWatch NowCryptocurrency Investment PhishingWatch NowCryptocurrency Investment ScamsWatch NowCyber Stories: A Tale of Software UpdatesWatch NowCybersecurity and BurnoutWatch NowCybersecurity FirstWatch NowCybersecurity ResolutionsWatch NowCybersecurity Tips For SeniorsWatch NowDeepfakesWatch NowDevice Security Nightmares: LostWatch NowDevice Security Nightmares: StolenWatch NowDevice Security Nightmares: Unauthorized AccessWatch NowDigital Shopping SecurityWatch NowDissecting a Phone ScamWatch NowEducating Kids on CybersecurityWatch NowFacts and Tips for Cyber-Safe TravelWatch NowFight the PhishWatch NowFive Physical Security TipsWatch NowFood ScamsWatch NowGaming Security Tips for Kids and ParentsWatch NowGrandparent ScamsWatch NowHoliday Shipping ScamsWatch NowHoliday Shopping TipsWatch NowImpacts of a Breach - CompanyWatch NowImpacts of a Breach - EmployeeWatch NowImpacts of a Breach - Exposed PartyWatch NowImproving Your Digital HealthWatch NowInsider Threats: UnintentionalWatch NowMedical Identity TheftWatch NowOnline Shopping and Social Media ScamsWatch NowPassword Best PracticesWatch NowPost-COVID-19 Vaccine ScamsWatch NowPreventing Cyber SnoopingWatch NowProtecting Your Wi-Fi RouterWatch NowRansomware - Before, During and AfterWatch NowRomance Phishing ScamsWatch NowRomance ScamsWatch NowSaving Banking Card InformationWatch NowSocial Media Phishing ScamsWatch NowSocial Media ScamsWatch NowSpotting a Phishing Landing PageWatch NowTax Scams (2021)Watch NowThe Future of FraudWatch NowTop 3 Phishing SavesWatch NowTop Holiday ScamsWatch NowTravel Scams - Booking Your TripWatch NowTravel Scams - During Your TripWatch NowTV ScamsWatch NowVishingWatch NowWebcam and Connected Device SecurityWatch NowWhat Is Social Engineering?Watch NowWhat Is The Cloud?Watch NowWhat is The Dark Web?Watch NowYour Incident Response Plan - Part 1Watch NowYour Incident Response Plan - Part 2Watch NowYour Incident Response Plan - Part 3Watch Now'",
                "estack": "AssertionError: Timed out retrying after 100000ms: expected '[ <td.MuiTableCell-root-443.MuiTableCell-body-445.ComponentTypes__TableCellContent-sc-nb4o94-11.fstFwt.MuiTableCell-alignLeft-450>, 320 more... ]' to contain text 'The Value of Encryption', but the text was 'SLAM Method: \"S\" is for Sender2022-04-26100Re-watch NowPhishing4012022-04-2675Re-watch NowSLAM Method: \"M\" is for Message2022-04-2675Re-watch NowVacation Scams2022-04-2675Re-watch NowInsider Threats: Intentional2022-04-2650Re-watch NowPassword Managers2022-04-2650Re-watch NowSLAM Method: “L” is for Links2022-04-2650Re-watch NowA Brief History of COVID-19 Scams2022-04-2625Re-watch NowLove Bug2022-04-2625Re-watch NowSLAM Method: \"A\" is for Attachments2022-04-2625Re-watch Now2020 Cybersecurity RecapWatch Now5 Tips For Staying Safe on the CloudWatch Now6 Simple Tips to Protect from Insider ThreatsWatch NowA Scammer\\'s CarolWatch NowBe Cyber SmartWatch NowBEC Scams & CEO FraudWatch NowBest Practices for Safe Social Media UseWatch NowBig Feelings Vs. ScamsWatch NowBreach Lifecycle: The BeginningWatch NowBreach Lifecycle: The EndWatch NowBreach Lifecycle: The MiddleWatch NowCloud JackingWatch NowCombatting Text Message ScamsWatch NowCookiesWatch NowCOVID-19 Vaccine ScamsWatch NowCryptocurrency Investment PhishingWatch NowCryptocurrency Investment ScamsWatch NowCyber Stories: A Tale of Software UpdatesWatch NowCybersecurity and BurnoutWatch NowCybersecurity FirstWatch NowCybersecurity ResolutionsWatch NowCybersecurity Tips For SeniorsWatch NowDeepfakesWatch NowDevice Security Nightmares: LostWatch NowDevice Security Nightmares: StolenWatch NowDevice Security Nightmares: Unauthorized AccessWatch NowDigital Shopping SecurityWatch NowDissecting a Phone ScamWatch NowEducating Kids on CybersecurityWatch NowFacts and Tips for Cyber-Safe TravelWatch NowFight the PhishWatch NowFive Physical Security TipsWatch NowFood ScamsWatch NowGaming Security Tips for Kids and ParentsWatch NowGrandparent ScamsWatch NowHoliday Shipping ScamsWatch NowHoliday Shopping TipsWatch NowImpacts of a Breach - CompanyWatch NowImpacts of a Breach - EmployeeWatch NowImpacts of a Breach - Exposed PartyWatch NowImproving Your Digital HealthWatch NowInsider Threats: UnintentionalWatch NowMedical Identity TheftWatch NowOnline Shopping and Social Media ScamsWatch NowPassword Best PracticesWatch NowPost-COVID-19 Vaccine ScamsWatch NowPreventing Cyber SnoopingWatch NowProtecting Your Wi-Fi RouterWatch NowRansomware - Before, During and AfterWatch NowRomance Phishing ScamsWatch NowRomance ScamsWatch NowSaving Banking Card InformationWatch NowSocial Media Phishing ScamsWatch NowSocial Media ScamsWatch NowSpotting a Phishing Landing PageWatch NowTax Scams (2021)Watch NowThe Future of FraudWatch NowTop 3 Phishing SavesWatch NowTop Holiday ScamsWatch NowTravel Scams - Booking Your TripWatch NowTravel Scams - During Your TripWatch NowTV ScamsWatch NowVishingWatch NowWebcam and Connected Device SecurityWatch NowWhat Is Social Engineering?Watch NowWhat Is The Cloud?Watch NowWhat is The Dark Web?Watch NowYour Incident Response Plan - Part 1Watch NowYour Incident Response Plan - Part 2Watch NowYour Incident Response Plan - Part 3Watch Now'\n    at myDashboardMicroTraining.validateScenario (cypress/page-objects/internal-bpp/partner-admin/my-dashboard/micro_training.ts:122:17)\n    at Context.eval (cypress/e2e/internal-bpp/manager/my-dashboard/manager-micro-training/partner_micro_training.ts:84:19)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": "- 'SLAM Method: \"S\" is for Sender2022-04-26100Re-watch NowPhishing4012022-04-2675Re-watch NowSLAM Method: \"M\" is for Message2022-04-2675Re-watch NowVacation Scams2022-04-2675Re-watch NowInsider Threats: Intentional2022-04-2650Re-watch NowPassword Managers2022-04-2650Re-watch NowSLAM Method: “L” is for Links2022-04-2650Re-watch NowA Brief History of COVID-19 Scams2022-04-2625Re-watch NowLove Bug2022-04-2625Re-watch NowSLAM Method: \"A\" is for Attachments2022-04-2625Re-watch Now2020 Cybersecurity RecapWatch Now5 Tips For Staying Safe on the CloudWatch Now6 Simple Tips to Protect from Insider ThreatsWatch NowA Scammer\\'s CarolWatch NowBe Cyber SmartWatch NowBEC Scams & CEO FraudWatch NowBest Practices for Safe Social Media UseWatch NowBig Feelings Vs. ScamsWatch NowBreach Lifecycle: The BeginningWatch NowBreach Lifecycle: The EndWatch NowBreach Lifecycle: The MiddleWatch NowCloud JackingWatch NowCombatting Text Message ScamsWatch NowCookiesWatch NowCOVID-19 Vaccine ScamsWatch NowCryptocurrency Investment PhishingWatch NowCryptocurrency Investment ScamsWatch NowCyber Stories: A Tale of Software UpdatesWatch NowCybersecurity and BurnoutWatch NowCybersecurity FirstWatch NowCybersecurity ResolutionsWatch NowCybersecurity Tips For SeniorsWatch NowDeepfakesWatch NowDevice Security Nightmares: LostWatch NowDevice Security Nightmares: StolenWatch NowDevice Security Nightmares: Unauthorized AccessWatch NowDigital Shopping SecurityWatch NowDissecting a Phone ScamWatch NowEducating Kids on CybersecurityWatch NowFacts and Tips for Cyber-Safe TravelWatch NowFight the PhishWatch NowFive Physical Security TipsWatch NowFood ScamsWatch NowGaming Security Tips for Kids and ParentsWatch NowGrandparent ScamsWatch NowHoliday Shipping ScamsWatch NowHoliday Shopping TipsWatch NowImpacts of a Breach - CompanyWatch NowImpacts of a Breach - EmployeeWatch NowImpacts of a Breach - Exposed PartyWatch NowImproving Your Digital HealthWatch NowInsider Threats: UnintentionalWatch NowMedical Identity TheftWatch NowOnline Shopping and Social Media ScamsWatch NowPassword Best PracticesWatch NowPost-COVID-19 Vaccine ScamsWatch NowPreventing Cyber SnoopingWatch NowProtecting Your Wi-Fi RouterWatch NowRansomware - Before, During and AfterWatch NowRomance Phishing ScamsWatch NowRomance ScamsWatch NowSaving Banking Card InformationWatch NowSocial Media Phishing ScamsWatch NowSocial Media ScamsWatch NowSpotting a Phishing Landing PageWatch NowTax Scams (2021)Watch NowThe Future of FraudWatch NowTop 3 Phishing SavesWatch NowTop Holiday ScamsWatch NowTravel Scams - Booking Your TripWatch NowTravel Scams - During Your TripWatch NowTV ScamsWatch NowVishingWatch NowWebcam and Connected Device SecurityWatch NowWhat Is Social Engineering?Watch NowWhat Is The Cloud?Watch NowWhat is The Dark Web?Watch NowYour Incident Response Plan - Part 1Watch NowYour Incident Response Plan - Part 2Watch NowYour Incident Response Plan - Part 3Watch Now'\n+ 'The Value of Encryption'\n"
              },
              "uuid": "c5aab02c-617f-48db-bbad-2a86e90705c3",
              "parentUUID": "3b87cec5-8357-46fb-8a26-1742773f1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (EDGE): Validate all unsubmitted answers on micro trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (EDGE): Validate all unsubmitted answers on micro trainings",
              "timedOut": null,
              "duration": 35522,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3d2eeeda-0848-4310-8fc7-6cb77dd0b572",
              "parentUUID": "3b87cec5-8357-46fb-8a26-1742773f1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (EDGE) : Validate all answered on micro trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (EDGE) : Validate all answered on micro trainings",
              "timedOut": null,
              "duration": 43391,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a696f069-833f-4a68-8a5c-ce1abc97cb8b",
              "parentUUID": "3b87cec5-8357-46fb-8a26-1742773f1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (NEGATIVE) : Validate submission button and answers on submitted trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (NEGATIVE) : Validate submission button and answers on submitted trainings",
              "timedOut": null,
              "duration": 6110,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2049a410-3140-43d4-95ce-187417da8ba0",
              "parentUUID": "3b87cec5-8357-46fb-8a26-1742773f1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (NEGATIVE) : Validate disable submit button if no answers",
              "fullTitle": "Micro Training My Dashboard - Micro Training (NEGATIVE) : Validate disable submit button if no answers",
              "timedOut": null,
              "duration": 7267,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "942cadf9-2942-4334-b40e-a6862d7ff870",
              "parentUUID": "3b87cec5-8357-46fb-8a26-1742773f1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Validate answer selections on unsubmitted micto trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Validate answer selections on unsubmitted micto trainings",
              "timedOut": null,
              "duration": 8036,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8409ddb6-7425-45ed-a670-ad783e286268",
              "parentUUID": "3b87cec5-8357-46fb-8a26-1742773f1275",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56d73d35-20a9-4cbe-8d2a-15d3b0488b0b",
            "e2c48574-d0c4-4140-aa51-046b13009aae",
            "3d2eeeda-0848-4310-8fc7-6cb77dd0b572",
            "a696f069-833f-4a68-8a5c-ce1abc97cb8b",
            "2049a410-3140-43d4-95ce-187417da8ba0",
            "942cadf9-2942-4334-b40e-a6862d7ff870",
            "8409ddb6-7425-45ed-a670-ad783e286268"
          ],
          "failures": [
            "c5aab02c-617f-48db-bbad-2a86e90705c3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 271141,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7a41aa24-6c69-4141-bf01-6432067e0207",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\my-dashboard\\manager-policies.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\my-dashboard\\manager-policies.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fbbf5dbd-834e-44ff-bb78-64c500f940fb",
          "title": "Policy & Procedure",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reset P & P : Reset Policies",
              "fullTitle": "Policy & Procedure Reset P & P : Reset Policies",
              "timedOut": null,
              "duration": 44664,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bcdde5ae-e68d-4b98-8c63-37b12db4d0a2",
              "parentUUID": "fbbf5dbd-834e-44ff-bb78-64c500f940fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset P & P : Reset Other Policies",
              "fullTitle": "Policy & Procedure Reset P & P : Reset Other Policies",
              "timedOut": null,
              "duration": 7758,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "790326cf-6940-400c-aa1d-7737e50d800e",
              "parentUUID": "fbbf5dbd-834e-44ff-bb78-64c500f940fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset P & P : Default items should visible",
              "fullTitle": "Policy & Procedure Reset P & P : Default items should visible",
              "timedOut": null,
              "duration": 9148,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "877496ac-be94-4452-aa4a-332c7ca12c0f",
              "parentUUID": "fbbf5dbd-834e-44ff-bb78-64c500f940fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset P & P : Check texts/labels if visible",
              "fullTitle": "Policy & Procedure Reset P & P : Check texts/labels if visible",
              "timedOut": null,
              "duration": 442,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "38eaaa2f-27e3-48f1-8344-7a2300555895",
              "parentUUID": "fbbf5dbd-834e-44ff-bb78-64c500f940fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Acknowledge All policies",
              "fullTitle": "Policy & Procedure Acknowledge All policies",
              "timedOut": null,
              "duration": 19157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "055c4098-c9b2-42e5-b68d-f98c726956ee",
              "parentUUID": "fbbf5dbd-834e-44ff-bb78-64c500f940fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Acknowledge All other policies",
              "fullTitle": "Policy & Procedure Acknowledge All other policies",
              "timedOut": null,
              "duration": 8280,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d8d68871-ef86-4b11-a914-2d7c20838d49",
              "parentUUID": "fbbf5dbd-834e-44ff-bb78-64c500f940fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (OOTB) : Validate API status when downloading all existing policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (OOTB) : Validate API status when downloading all existing policies",
              "timedOut": null,
              "duration": 2694,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "22f40388-9373-4803-a858-e58c13f53aaf",
              "parentUUID": "fbbf5dbd-834e-44ff-bb78-64c500f940fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (OOTB) : Validate API status when downloading other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (OOTB) : Validate API status when downloading other policies",
              "timedOut": null,
              "duration": 2686,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a36ce313-76ad-45eb-8c69-289dc6fc63da",
              "parentUUID": "fbbf5dbd-834e-44ff-bb78-64c500f940fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (NEGATIVE) : Hide created and modified date in other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (NEGATIVE) : Hide created and modified date in other policies",
              "timedOut": null,
              "duration": 4508,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c7642989-5746-40a9-8617-7c509343ce48",
              "parentUUID": "fbbf5dbd-834e-44ff-bb78-64c500f940fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (NEGATIVE) : Hide created and modified date in existing policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (NEGATIVE) : Hide created and modified date in existing policies",
              "timedOut": null,
              "duration": 2515,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6a8710ad-6414-4717-b7a0-02469d141973",
              "parentUUID": "fbbf5dbd-834e-44ff-bb78-64c500f940fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (EDGE) : Validate existing policies via modal",
              "fullTitle": "Policy & Procedure Dashboard Policies (EDGE) : Validate existing policies via modal",
              "timedOut": null,
              "duration": 5968,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "07078756-5988-4ef0-a932-029e38d8e5a2",
              "parentUUID": "fbbf5dbd-834e-44ff-bb78-64c500f940fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (EDGE) : Validate other policies via modal",
              "fullTitle": "Policy & Procedure Dashboard Policies (EDGE) : Validate other policies via modal",
              "timedOut": null,
              "duration": 6716,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9347603c-7dba-4609-b8d0-3af1752b9772",
              "parentUUID": "fbbf5dbd-834e-44ff-bb78-64c500f940fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bcdde5ae-e68d-4b98-8c63-37b12db4d0a2",
            "790326cf-6940-400c-aa1d-7737e50d800e",
            "877496ac-be94-4452-aa4a-332c7ca12c0f",
            "38eaaa2f-27e3-48f1-8344-7a2300555895",
            "055c4098-c9b2-42e5-b68d-f98c726956ee",
            "d8d68871-ef86-4b11-a914-2d7c20838d49",
            "22f40388-9373-4803-a858-e58c13f53aaf",
            "a36ce313-76ad-45eb-8c69-289dc6fc63da",
            "c7642989-5746-40a9-8617-7c509343ce48",
            "6a8710ad-6414-4717-b7a0-02469d141973",
            "07078756-5988-4ef0-a932-029e38d8e5a2",
            "9347603c-7dba-4609-b8d0-3af1752b9772"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 114536,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d8a66f19-a286-48ab-a0a9-1eeca31c460b",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\partner-profile\\billing-report.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\partner-profile\\billing-report.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "91868457-b7b2-427f-a5e0-83606379e901",
          "title": "PA Billing Report",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "PA Billing Report : Default items should visible",
              "fullTitle": "PA Billing Report PA Billing Report : Default items should visible",
              "timedOut": null,
              "duration": 29959,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ed6aa550-524d-4ce1-a8b8-db63a99bcc8e",
              "parentUUID": "91868457-b7b2-427f-a5e0-83606379e901",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report : Check texts/labels if visible",
              "fullTitle": "PA Billing Report PA Billing Report : Check texts/labels if visible",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "821ef7c8-7196-4298-8fa6-b94a9edbbc31",
              "parentUUID": "91868457-b7b2-427f-a5e0-83606379e901",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report (EDGE) : Validate download Billing statement",
              "fullTitle": "PA Billing Report PA Billing Report (EDGE) : Validate download Billing statement",
              "timedOut": null,
              "duration": 12751,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "315e5be8-83c1-4a4a-be90-5b8ad52e9598",
              "parentUUID": "91868457-b7b2-427f-a5e0-83606379e901",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report (EDGE) : Validate download XLS File",
              "fullTitle": "PA Billing Report PA Billing Report (EDGE) : Validate download XLS File",
              "timedOut": null,
              "duration": 3068,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "de507af1-7be9-48eb-882a-67ef077efc11",
              "parentUUID": "91868457-b7b2-427f-a5e0-83606379e901",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ed6aa550-524d-4ce1-a8b8-db63a99bcc8e",
            "821ef7c8-7196-4298-8fa6-b94a9edbbc31",
            "315e5be8-83c1-4a4a-be90-5b8ad52e9598",
            "de507af1-7be9-48eb-882a-67ef077efc11"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 45936,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6661f9f4-727e-4b61-a5a8-98fb842590e5",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\manager\\contact.feature",
      "file": "cypress\\e2e\\internal-bpp\\manager\\contact.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c89b8352-2b0c-4c46-ba0f-ff9c71624f5d",
          "title": "Contact Us - Manager",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Contact Us : Default items should visible",
              "fullTitle": "Contact Us - Manager Contact Us : Default items should visible",
              "timedOut": null,
              "duration": 30164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "51cb239c-1394-48c0-9048-3e8ca2f84b69",
              "parentUUID": "c89b8352-2b0c-4c46-ba0f-ff9c71624f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us : Check texts/labels if visible",
              "fullTitle": "Contact Us - Manager Contact Us : Check texts/labels if visible",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5a7d4dff-3d30-47eb-965d-a21870f3b2d2",
              "parentUUID": "c89b8352-2b0c-4c46-ba0f-ff9c71624f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us : Validate cancel submission",
              "fullTitle": "Contact Us - Manager Contact Us : Validate cancel submission",
              "timedOut": null,
              "duration": 1874,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6365b8b2-1158-456f-a8de-49c10bfe5c8a",
              "parentUUID": "c89b8352-2b0c-4c46-ba0f-ff9c71624f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us (EDGE) : Validate contact-us submission",
              "fullTitle": "Contact Us - Manager Contact Us (EDGE) : Validate contact-us submission",
              "timedOut": null,
              "duration": 3937,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "32cf9244-bec2-4137-9a4c-2b83488c0fe9",
              "parentUUID": "c89b8352-2b0c-4c46-ba0f-ff9c71624f5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51cb239c-1394-48c0-9048-3e8ca2f84b69",
            "5a7d4dff-3d30-47eb-965d-a21870f3b2d2",
            "6365b8b2-1158-456f-a8de-49c10bfe5c8a",
            "32cf9244-bec2-4137-9a4c-2b83488c0fe9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 36110,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}