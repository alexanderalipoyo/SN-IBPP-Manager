{
  "stats": {
    "suites": 2,
    "tests": 18,
    "passes": 18,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-16T14:26:06.644Z",
    "end": "2022-05-16T14:29:19.694Z",
    "duration": 117041,
    "testsRegistered": 18,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "06059208-e1e8-4ce7-89a7-a7764df4f80f",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/employee/general.feature",
      "file": "cypress/integration/internal-bpp/employee/general.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
          "title": "General - Employee",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Application Menu : Default items should visible",
              "fullTitle": "General - Employee Application Menu : Default items should visible",
              "timedOut": null,
              "duration": 12085,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7a70fdf8-f72a-47c5-9e9e-e530d243c349",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Check texts/labels if visible",
              "fullTitle": "General - Employee Application Menu : Check texts/labels if visible",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "78d828b0-b671-4b09-846f-f8a75945bedb",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Validate favorite application",
              "fullTitle": "General - Employee Application Menu : Validate favorite application",
              "timedOut": null,
              "duration": 12084,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ec0ba490-f743-449c-8b83-cc9cce8448cc",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Default items and fields should visible",
              "fullTitle": "General - Employee My Profile : Default items and fields should visible",
              "timedOut": null,
              "duration": 2681,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7a6f2934-48bd-43c0-9f93-b1698b52f8fc",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Check texts/labels if visible",
              "fullTitle": "General - Employee My Profile : Check texts/labels if visible",
              "timedOut": null,
              "duration": 1696,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "afcb24f8-4322-440d-9f5f-fc25e15634d0",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Update Basic Information",
              "fullTitle": "General - Employee My Profile : Update Basic Information",
              "timedOut": null,
              "duration": 6673,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f21bc374-1a83-41fd-8c6d-66685e39dac7",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Display warning modal to disable weekly training and monthly newsletter emails",
              "fullTitle": "General - Employee My Profile : Display warning modal to disable weekly training and monthly newsletter emails",
              "timedOut": null,
              "duration": 3490,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f82b642f-3d67-4e09-be05-50e551b14f0b",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "fullTitle": "General - Employee My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "timedOut": null,
              "duration": 1702,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3c23ac3a-7dab-4bc6-8c8c-9ccd0ef5018e",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Password and verify password fields does not match",
              "fullTitle": "General - Employee My Profile (NEGATIVE) : Password and verify password fields does not match",
              "timedOut": null,
              "duration": 4031,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "34db69b9-43c7-4edb-8b38-45fb8166b3b9",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "fullTitle": "General - Employee My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "timedOut": null,
              "duration": 3109,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "55f5f00b-c1d0-4f18-bd95-07e3cac6cdb7",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "fullTitle": "General - Employee My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "timedOut": null,
              "duration": 984,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3f07c0d3-43ac-425e-b626-d49dca97ac51",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "fullTitle": "General - Employee My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "timedOut": null,
              "duration": 914,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "89ab2403-4aae-48c9-897d-6667ab18f286",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Able to change country code on phone number",
              "fullTitle": "General - Employee My Profile (OOTB) : Able to change country code on phone number",
              "timedOut": null,
              "duration": 5392,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ea841712-2841-4a96-90ad-3059465da4a5",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Enter a screen name with spaces only",
              "fullTitle": "General - Employee My Profile (OOTB) : Enter a screen name with spaces only",
              "timedOut": null,
              "duration": 3943,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fc8900f5-cf5c-4631-ab91-ec1fb2753ae3",
              "parentUUID": "f5b3e5bc-9f47-4dcf-95ad-c908b25baf4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a70fdf8-f72a-47c5-9e9e-e530d243c349",
            "78d828b0-b671-4b09-846f-f8a75945bedb",
            "ec0ba490-f743-449c-8b83-cc9cce8448cc",
            "7a6f2934-48bd-43c0-9f93-b1698b52f8fc",
            "afcb24f8-4322-440d-9f5f-fc25e15634d0",
            "f21bc374-1a83-41fd-8c6d-66685e39dac7",
            "f82b642f-3d67-4e09-be05-50e551b14f0b",
            "3c23ac3a-7dab-4bc6-8c8c-9ccd0ef5018e",
            "34db69b9-43c7-4edb-8b38-45fb8166b3b9",
            "55f5f00b-c1d0-4f18-bd95-07e3cac6cdb7",
            "3f07c0d3-43ac-425e-b626-d49dca97ac51",
            "89ab2403-4aae-48c9-897d-6667ab18f286",
            "ea841712-2841-4a96-90ad-3059465da4a5",
            "fc8900f5-cf5c-4631-ab91-ec1fb2753ae3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 58921,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "14397ede-cf1e-4084-90f1-6e9291623f26",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/employee/contact.feature",
      "file": "cypress/integration/internal-bpp/employee/contact.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "88e3c637-78e6-4c42-b8a2-f847306a85ef",
          "title": "Contact Us - Employee",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Contact Us : Default items should visible",
              "fullTitle": "Contact Us - Employee Contact Us : Default items should visible",
              "timedOut": null,
              "duration": 40018,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "39ef1729-0abe-4f80-bbde-da00d63c7162",
              "parentUUID": "88e3c637-78e6-4c42-b8a2-f847306a85ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us : Check texts/labels if visible",
              "fullTitle": "Contact Us - Employee Contact Us : Check texts/labels if visible",
              "timedOut": null,
              "duration": 508,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0806a08e-c07d-4cd8-91ec-27b13c58ce49",
              "parentUUID": "88e3c637-78e6-4c42-b8a2-f847306a85ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us : Validate cancel submission",
              "fullTitle": "Contact Us - Employee Contact Us : Validate cancel submission",
              "timedOut": null,
              "duration": 5696,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "79001575-0ff6-49d8-b960-8704ad5006df",
              "parentUUID": "88e3c637-78e6-4c42-b8a2-f847306a85ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us (EDGE) : Validate contact-us submission",
              "fullTitle": "Contact Us - Employee Contact Us (EDGE) : Validate contact-us submission",
              "timedOut": null,
              "duration": 11898,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "192bcc05-6345-47fc-9f08-3cf5192cddd0",
              "parentUUID": "88e3c637-78e6-4c42-b8a2-f847306a85ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39ef1729-0abe-4f80-bbde-da00d63c7162",
            "0806a08e-c07d-4cd8-91ec-27b13c58ce49",
            "79001575-0ff6-49d8-b960-8704ad5006df",
            "192bcc05-6345-47fc-9f08-3cf5192cddd0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 58120,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}